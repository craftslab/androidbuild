# ******************************************************************************
# ***            This file is generated and should not be edited             ***
# ******************************************************************************
#
# This file contains variables, rules, and pools with name prefixes indicating
# they were generated by the following Go packages:
#
#     aidl                      [from Go package android/aidl]
#     android                   [from Go package android/soong/android]
#     android.soong.cc.config   [from Go package android/soong/cc/config]
#     android.soong.java.config [from Go package android/soong/java/config]
#     android.soong.rust.config [from Go package android/soong/rust/config]
#     apex                      [from Go package android/apex]
# bootstrap                 [from Go package
# github.com/google/blueprint/bootstrap]
#     bpf                       [from Go package android/soong/bpf]
#     cc                        [from Go package android/soong/cc]
#     clang                     [from Go package android/soong/clang]
#     configs                   [from Go package android/soong/kernel/configs]
#     genrule                   [from Go package android/soong/genrule]
#     hidl                      [from Go package android/hidl]
#     java                      [from Go package android/soong/java]
# libchrome                 [from Go package
# android/soong/external/libchrome]
#     llvm                      [from Go package android/soong/llvm]
#     python                    [from Go package android/soong/python]
#     rust                      [from Go package android/soong/rust]
#     selinux                   [from Go package android/soong/selinux]
#     suite_harness             [from Go package android/soong/suite_harness]
#     sysprop                   [from Go package android/soong/sysprop]
#     tradefed                  [from Go package android/soong/tradefed]
#     vintf                     [from Go package android/vintf]
#     xsdc                      [from Go package android/xsdc]
#
ninja_required_version = 1.7.0

g.aidl.aidlCmd = out/soong/host/linux-x86/bin/aidl

g.aidl.aidlToJniCmd = system/tools/aidl/build/aidl_to_jni.py

g.aidl.bpmodifyCmd = out/soong/host/linux-x86/bin/bpmodify

g.android.cpPreserveSymlinks = -d

g.android.generate_notice = build/make/tools/generate-notice-files.py

g.android.merge_notices = build/soong/scripts/mergenotice.py

g.android.minigzip = out/soong/host/linux-x86/bin/minigzip

g.android.soong.cc.config.Arm64ClangArmv8ACflags = -march=armv8-a

g.android.soong.cc.config.Arm64ClangCflags = -Werror=implicit-function-declaration

g.android.soong.cc.config.Arm64ClangCppflags = 

g.android.soong.cc.config.HostPrebuiltTag = linux-x86

g.android.soong.cc.config.arm64GccVersion = 4.9

g.android.soong.cc.config.Arm64GccRoot = prebuilts/gcc/${g.android.soong.cc.config.HostPrebuiltTag}/aarch64/aarch64-linux-android-${g.android.soong.cc.config.arm64GccVersion}

g.android.soong.cc.config.Arm64IncludeFlags = -isystem bionic/libc/include -isystem bionic/libc/kernel/uapi -isystem bionic/libc/kernel/uapi/asm-arm64 -isystem bionic/libc/kernel/android/scsi -isystem bionic/libc/kernel/android/uapi

g.android.soong.cc.config.Arm64Ldflags = -Wl,-m,aarch64_elf64_le_vec -Wl,--hash-style=gnu -fuse-ld=gold -Wl,--icf=safe

g.android.soong.cc.config.Arm64Lldflags = -Wl,--hash-style=gnu -Wl,--icf=safe -Wl,-z,max-page-size=4096

g.android.soong.cc.config.ArmClangArmCflags = -fstrict-aliasing

g.android.soong.cc.config.ArmClangArmv8ACflags = -march=armv8-a -mfloat-abi=softfp -mfpu=neon-fp-armv8

g.android.soong.cc.config.ArmClangCflags = -fomit-frame-pointer

g.android.soong.cc.config.ArmClangCppflags = 

g.android.soong.cc.config.ArmClangGenericCflags = 

g.android.soong.cc.config.ArmClangThumbCflags = -mthumb -Os

g.android.soong.cc.config.armGccVersion = 4.9

g.android.soong.cc.config.ArmGccRoot = prebuilts/gcc/${g.android.soong.cc.config.HostPrebuiltTag}/arm/arm-linux-androideabi-${g.android.soong.cc.config.armGccVersion}

g.android.soong.cc.config.ArmIncludeFlags = -isystem bionic/libc/include -isystem bionic/libc/kernel/uapi -isystem bionic/libc/kernel/uapi/asm-arm -isystem bionic/libc/kernel/android/scsi -isystem bionic/libc/kernel/android/uapi

g.android.soong.cc.config.ArmLdflags = -Wl,--icf=safe -Wl,--hash-style=gnu -Wl,-m,armelf

g.android.soong.cc.config.ArmLldflags = -Wl,--icf=safe -Wl,--hash-style=gnu -Wl,-m,armelf

g.android.soong.cc.config.ArmToolchainClangCflags = -msoft-float

g.android.soong.cc.config.CcWrapper = 

g.android.soong.cc.config.ClangDefaultBase = prebuilts/clang/host

g.android.soong.cc.config.ClangBase = ${g.android.soong.cc.config.ClangDefaultBase}

g.android.soong.cc.config.ClangVersion = clang-r365631b

g.android.soong.cc.config.ClangShortVersion = 9.0.7

g.android.soong.cc.config.ClangAsanLibDir = ${g.android.soong.cc.config.ClangBase}/linux-x86/${g.android.soong.cc.config.ClangVersion}/lib64/clang/${g.android.soong.cc.config.ClangShortVersion}/lib/linux

g.android.soong.cc.config.ClangPath = ${g.android.soong.cc.config.ClangBase}/${g.android.soong.cc.config.HostPrebuiltTag}/${g.android.soong.cc.config.ClangVersion}

g.android.soong.cc.config.ClangBin = ${g.android.soong.cc.config.ClangPath}/bin

g.android.soong.cc.config.ClangExtraExternalCflags = -Wno-enum-compare -Wno-enum-compare-switch -Wno-null-pointer-arithmetic -Wno-null-dereference

g.android.soong.cc.config.ClangExternalCflags = ${g.android.soong.cc.config.ClangExtraExternalCflags}

g.android.soong.cc.config.ClangExtraCflags = -D__compiler_offsetof=__builtin_offsetof -faddrsig -Wimplicit-fallthrough -Werror=int-conversion -fexperimental-new-pass-manager -Wno-reserved-id-macro -Wno-unused-command-line-argument -fcolor-diagnostics -Wno-zero-as-null-pointer-constant -Wno-sign-compare -Wno-defaulted-function-deleted -Wno-inconsistent-missing-override

g.android.soong.cc.config.ClangExtraCppflags = -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS -Wno-thread-safety-negative -Wno-gnu-include-next

g.android.soong.cc.config.ClangExtraNoOverrideCflags = -Werror=address-of-temporary -Werror=return-type -Wno-tautological-constant-compare -Wno-tautological-type-limit-compare

g.android.soong.cc.config.ClangExtraTargetCflags = -nostdlibinc

g.android.soong.cc.config.CommonClangGlobalCflags = -DANDROID -fmessage-length=0 -W -Wall -Wno-unused -Winit-self -Wpointer-arith -no-canonical-prefixes -DNDEBUG -UDEBUG -fno-exceptions -Wno-multichar -O2 -g -fno-strict-aliasing -Werror=date-time -fdebug-prefix-map=/proc/self/cwd= ${g.android.soong.cc.config.ClangExtraCflags}

g.android.soong.cc.config.CommonClangGlobalCppflags = -Wsign-promo ${g.android.soong.cc.config.ClangExtraCppflags}

g.android.soong.cc.config.CommonGlobalConlyflags = 

g.android.soong.cc.config.CommonGlobalIncludes = -Isystem/core/include -Isystem/media/audio/include -Ihardware/libhardware/include -Ihardware/libhardware_legacy/include -Ihardware/ril/include -Iframeworks/native/include -Iframeworks/native/opengl/include -Iframeworks/av/include

g.android.soong.cc.config.CommonNativehelperInclude = -Ilibnativehelper/include_jni

g.android.soong.cc.config.DeviceClangGlobalCflags = -ffunction-sections -fdata-sections -fno-short-enums -funwind-tables -fstack-protector-strong -Wa,--noexecstack -D_FORTIFY_SOURCE=2 -Wstrict-aliasing=2 -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Werror=format-security ${g.android.soong.cc.config.ClangExtraTargetCflags}

g.android.soong.cc.config.DeviceGlobalCppflags = -fvisibility-inlines-hidden

g.android.soong.cc.config.DeviceGlobalLdflags = -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id=md5 -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined-version -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_stripped.a

g.android.soong.cc.config.DeviceGlobalLldflags = -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id=md5 -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--no-undefined-version -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libgcc_stripped.a -fuse-ld=lld

g.android.soong.cc.config.HostClangGlobalCflags = 

g.android.soong.cc.config.HostGlobalCppflags = 

g.android.soong.cc.config.HostGlobalLdflags = 

g.android.soong.cc.config.HostGlobalLldflags = -fuse-ld=lld

g.android.soong.cc.config.LinuxGlibcVersion = 2.17

g.android.soong.cc.config.ShortLinuxGccVersion = 4.8

g.android.soong.cc.config.LinuxGccRoot = prebuilts/gcc/${g.android.soong.cc.config.HostPrebuiltTag}/host/x86_64-linux-glibc${g.android.soong.cc.config.LinuxGlibcVersion}-${g.android.soong.cc.config.ShortLinuxGccVersion}

g.android.soong.cc.config.LinuxClangCflags = -Wa,--noexecstack -fPIC -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -fstack-protector -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS --gcc-toolchain=${g.android.soong.cc.config.LinuxGccRoot} --sysroot ${g.android.soong.cc.config.LinuxGccRoot}/sysroot -fstack-protector-strong

g.android.soong.cc.config.LinuxClangLdflags = -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined-version --gcc-toolchain=${g.android.soong.cc.config.LinuxGccRoot} --sysroot ${g.android.soong.cc.config.LinuxGccRoot}/sysroot

g.android.soong.cc.config.LinuxClangLldflags = -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined-version --gcc-toolchain=${g.android.soong.cc.config.LinuxGccRoot} --sysroot ${g.android.soong.cc.config.LinuxGccRoot}/sysroot

g.android.soong.cc.config.LinuxGccTriple = x86_64-linux

g.android.soong.cc.config.LinuxGccVersion = 4.8.3

g.android.soong.cc.config.LinuxX8664ClangCflags = -m64

g.android.soong.cc.config.LinuxX8664ClangLdflags = -m64 -B${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion} -L${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion} -L${g.android.soong.cc.config.LinuxGccRoot}/${g.android.soong.cc.config.LinuxGccTriple}/lib64

g.android.soong.cc.config.LinuxX8664ClangLldflags = -m64 -B${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion} -L${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion} -L${g.android.soong.cc.config.LinuxGccRoot}/${g.android.soong.cc.config.LinuxGccTriple}/lib64

g.android.soong.cc.config.LinuxX8664YasmFlags = -f elf64 -m amd64

g.android.soong.cc.config.LinuxX86ClangCflags = -msse3 -m32 -march=prescott -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1

g.android.soong.cc.config.LinuxX86ClangLdflags = -m32 -B${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion}/32 -L${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion}/32 -L${g.android.soong.cc.config.LinuxGccRoot}/${g.android.soong.cc.config.LinuxGccTriple}/lib32

g.android.soong.cc.config.LinuxX86ClangLldflags = -m32 -B${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion}/32 -L${g.android.soong.cc.config.LinuxGccRoot}/lib/gcc/${g.android.soong.cc.config.LinuxGccTriple}/${g.android.soong.cc.config.LinuxGccVersion}/32 -L${g.android.soong.cc.config.LinuxGccRoot}/${g.android.soong.cc.config.LinuxGccTriple}/lib32

g.android.soong.cc.config.LinuxX86YasmFlags = -f elf32 -m x86

g.android.soong.cc.config.NoOverrideClangGlobalCflags = -Werror=int-to-pointer-cast -Werror=pointer-to-int-cast -Werror=fortify-source ${g.android.soong.cc.config.ClangExtraNoOverrideCflags}

g.android.soong.cc.config.RSClangBase = prebuilts/clang/host

g.android.soong.cc.config.RSClangVersion = clang-3289846

g.android.soong.cc.config.RSLLVMPrebuiltsPath = ${g.android.soong.cc.config.RSClangBase}/${g.android.soong.cc.config.HostPrebuiltTag}/${g.android.soong.cc.config.RSClangVersion}/bin

g.android.soong.cc.config.RSReleaseVersion = 3.8

g.android.soong.cc.config.RSIncludePath = ${g.android.soong.cc.config.RSLLVMPrebuiltsPath}/../lib64/clang/${g.android.soong.cc.config.RSReleaseVersion}/include

g.android.soong.cc.config.RsGlobalIncludes = -Iexternal/clang/lib/Headers -Iframeworks/rs/script_api/include

g.android.soong.cc.config.TidyDefaultGlobalChecks = -*,clang-diagnostic-unused-command-line-argument,google*,misc-macro-parentheses,performance*,-google-readability*,-google-runtime-references

g.android.soong.cc.config.TidyDefaultHeaderDirs = art/|bionic/|bootable/|build/|cts/|dalvik/|developers/|development/|frameworks/|libcore/|libnativehelper/|system/

g.android.soong.cc.config.TidyExternalVendorChecks = -*,clang-diagnostic-unused-command-line-argument,google*,-google-build-using-namespace,-google-default-arguments,-google-explicit-constructor,-google-readability*,-google-runtime-int,-google-runtime-references

g.android.soong.cc.config.TidyWithTidyFlags = 

g.android.soong.cc.config.WindowsGccVersion = 4.8

g.android.soong.cc.config.WindowsGccRoot = prebuilts/gcc/${g.android.soong.cc.config.HostPrebuiltTag}/host/x86_64-w64-mingw32-${g.android.soong.cc.config.WindowsGccVersion}

g.android.soong.cc.config.WindowsGccTriple = x86_64-w64-mingw32

g.android.soong.cc.config.WindowsClangCflags = -DUSE_MINGW -DWIN32_LEAN_AND_MEAN -Wno-unused-parameter -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D__USE_MINGW_ANSI_STDIO=1 -D_WIN32_WINNT=0x0601 -DWINVER=0x0601 -D_FILE_OFFSET_BITS=64 --sysroot ${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}

g.android.soong.cc.config.WindowsClangCppflags = 

g.android.soong.cc.config.WindowsClangLldflags = -Wl,--dynamicbase -Wl,--nxcompat

g.android.soong.cc.config.WindowsIncludeFlags = -isystem ${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/include

g.android.soong.cc.config.WindowsX8664ClangCflags = -m64

g.android.soong.cc.config.WindowsX8664ClangCppflags = 

g.android.soong.cc.config.WindowsX8664ClangLldflags = -m64 -L${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/lib64 -Wl,--high-entropy-va -B${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/bin -B${g.android.soong.cc.config.WindowsGccRoot}/lib/gcc/${g.android.soong.cc.config.WindowsGccTriple}/4.8.3 -L${g.android.soong.cc.config.WindowsGccRoot}/lib/gcc/${g.android.soong.cc.config.WindowsGccTriple}/4.8.3 -B${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/lib64

g.android.soong.cc.config.WindowsX8664YasmFlags = -f win64 -m amd64

g.android.soong.cc.config.WindowsX86ClangCflags = -m32

g.android.soong.cc.config.WindowsX86ClangCppflags = 

g.android.soong.cc.config.WindowsX86ClangLldflags = -m32 -Wl,--large-address-aware -L${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/lib32 -B${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/bin -B${g.android.soong.cc.config.WindowsGccRoot}/lib/gcc/${g.android.soong.cc.config.WindowsGccTriple}/4.8.3/32 -L${g.android.soong.cc.config.WindowsGccRoot}/lib/gcc/${g.android.soong.cc.config.WindowsGccTriple}/4.8.3/32 -B${g.android.soong.cc.config.WindowsGccRoot}/${g.android.soong.cc.config.WindowsGccTriple}/lib32

g.android.soong.cc.config.WindowsX86YasmFlags = -f win32 -m x86

g.android.soong.java.config.Aapt2Cmd = out/soong/host/linux-x86/bin/aapt2

g.android.soong.java.config.AidlCmd = out/soong/host/linux-x86/bin/aidl

g.android.soong.java.config.Class2Greylist = out/soong/host/linux-x86/bin/class2greylist

g.android.soong.java.config.CommonJdkFlags = -Xmaxerrs 9999999 -encoding UTF-8 -sourcepath "" -g -XDskipDuplicateBridges=true -XDstringConcat=inline

g.android.soong.java.config.D8Cmd = out/soong/host/linux-x86/bin/d8

g.android.soong.java.config.DexFlags = -JXX:OnError='cat hs_err_pid%p.log' -JXX:CICompilerCount=6 -JXX:+UseDynamicNumberOfGCThreads

g.android.soong.java.config.DexpreoptGen = out/soong/host/linux-x86/bin/dexpreopt_gen

g.android.soong.java.config.ExtractJarPackagesCmd = out/soong/host/linux-x86/bin/extract_jar_packages

g.android.soong.java.config.GenKotlinBuildFileCmd = build/soong/scripts/gen-kotlin-build-file.sh

g.android.soong.java.config.HiddenAPI = out/soong/host/linux-x86/bin/hiddenapi

g.android.soong.java.config.JacocoCLIJar = out/soong/host/linux-x86/framework/jacoco-cli.jar

g.android.soong.java.config.JarArgsCmd = build/soong/scripts/jar-args.sh

g.android.soong.java.config.JavaHome = prebuilts/jdk/jdk9/linux-x86

g.android.soong.java.config.JavaToolchain = ${g.android.soong.java.config.JavaHome}/bin

g.android.soong.java.config.JarCmd = ${g.android.soong.java.config.JavaToolchain}/jar

g.android.soong.java.config.JarjarCmd = out/soong/host/linux-x86/framework/jarjar.jar

g.android.soong.java.config.JavaCmd = ${g.android.soong.java.config.JavaToolchain}/java

g.android.soong.java.config.JavaVmFlags = -XX:OnError="cat hs_err_pid%p.log" -XX:CICompilerCount=6 -XX:+UseDynamicNumberOfGCThreads

g.android.soong.java.config.JavacCmd = ${g.android.soong.java.config.JavaToolchain}/javac

g.android.soong.java.config.JavacHeapSize = 2048M

g.android.soong.java.config.JavacHeapFlags = -J-Xmx${g.android.soong.java.config.JavacHeapSize}

g.android.soong.java.config.JavacVmFlags = -J-XX:OnError="cat hs_err_pid%p.log" -J-XX:CICompilerCount=6 -J-XX:+UseDynamicNumberOfGCThreads

g.android.soong.java.config.JavacWrapper = 

g.android.soong.java.config.JavadocCmd = ${g.android.soong.java.config.JavaToolchain}/javadoc

g.android.soong.java.config.JlinkCmd = ${g.android.soong.java.config.JavaToolchain}/jlink

g.android.soong.java.config.JlinkVersion = 9

g.android.soong.java.config.JmodCmd = ${g.android.soong.java.config.JavaToolchain}/jmod

g.android.soong.java.config.JrtFsJar = ${g.android.soong.java.config.JavaHome}/lib/jrt-fs.jar

g.android.soong.java.config.KotlinAnnotationJar = external/kotlinc/lib/annotations-13.0.jar

g.android.soong.java.config.KotlinCompilerJar = external/kotlinc/lib/kotlin-compiler.jar

g.android.soong.java.config.KotlinKaptJar = external/kotlinc/lib/kotlin-annotation-processing.jar

g.android.soong.java.config.KotlinPreloaderJar = external/kotlinc/lib/kotlin-preloader.jar

g.android.soong.java.config.KotlinReflectJar = external/kotlinc/lib/kotlin-reflect.jar

g.android.soong.java.config.KotlinScriptRuntimeJar = external/kotlinc/lib/kotlin-script-runtime.jar

g.android.soong.java.config.KotlinStdlibJar = external/kotlinc/lib/kotlin-stdlib.jar

g.android.soong.java.config.KotlinTrove4jJar = external/kotlinc/lib/trove4j.jar

g.android.soong.java.config.KotlincCmd = external/kotlinc/bin/kotlinc

g.android.soong.java.config.KotlincSuppressJDK9Warnings = -J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED -J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED -J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED -J--add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED

g.android.soong.java.config.ManifestCheckCmd = out/soong/host/linux-x86/bin/manifest_check

g.android.soong.java.config.ManifestFixerCmd = out/soong/host/linux-x86/bin/manifest_fixer

g.android.soong.java.config.ManifestMergerCmd = out/soong/host/linux-x86/bin/manifest-merger

g.android.soong.java.config.MergeZipsCmd = out/soong/host/linux-x86/bin/merge_zips

g.android.soong.java.config.PackageCheckCmd = build/soong/scripts/package-check.sh

g.android.soong.java.config.R8Cmd = out/soong/host/linux-x86/bin/r8-compat-proguard

g.android.soong.java.config.SignapkCmd = out/soong/host/linux-x86/framework/signapk.jar

g.android.soong.java.config.SignapkJniLibrary = out/soong/host/linux-x86/lib64/libconscrypt_openjdk_jni.so

g.android.soong.java.config.SoongJavacWrapper = out/soong/host/linux-x86/bin/soong_javac_wrapper

g.android.soong.java.config.SoongZipCmd = out/soong/host/linux-x86/bin/soong_zip

g.android.soong.java.config.TurbineJar = out/soong/host/linux-x86/framework/turbine.jar

g.android.soong.java.config.Zip2ZipCmd = out/soong/host/linux-x86/bin/zip2zip

g.android.soong.java.config.ZipAlign = out/soong/host/linux-x86/bin/zipalign

g.android.soong.java.config.ZipSyncCmd = out/soong/host/linux-x86/bin/zipsync

g.android.soong.java.config.hostPrebuiltTag = linux-x86

g.android.soong.java.config.Ziptime = prebuilts/build-tools/${g.android.soong.java.config.hostPrebuiltTag}/bin/ziptime

g.android.soong.rust.config.Arm64ToolchainLinkFlags = -Wl,--icf=safe -Wl,-z,max-page-size=4096 -Wl,-execute-only

g.android.soong.rust.config.Arm64ToolchainRustFlags = 

g.android.soong.rust.config.Arm64armv8-aVariantRustFlags = 

g.android.soong.rust.config.DeviceGlobalLinkFlags = -Bdynamic -nostdlib -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id=md5 -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--pack-dyn-relocs=android+relr -Wl,--use-android-relr-tags -Wl,--no-undefined -Wl,--hash-style=gnu

g.android.soong.rust.config.HostPrebuiltTag = linux-x86

g.android.soong.rust.config.LinuxToolchainLinkFlags = 

g.android.soong.rust.config.LinuxToolchainRustFlags = 

g.android.soong.rust.config.LinuxToolchainX8664LinkFlags = 

g.android.soong.rust.config.LinuxToolchainX8664RustFlags = 

g.android.soong.rust.config.RustDefaultBase = prebuilts/rust

g.android.soong.rust.config.RustBase = ${g.android.soong.rust.config.RustDefaultBase}

g.android.soong.rust.config.RustVersion = 1.37.0

g.android.soong.rust.config.RustPath = ${g.android.soong.rust.config.RustBase}/${g.android.soong.rust.config.HostPrebuiltTag}/${g.android.soong.rust.config.RustVersion}

g.android.soong.rust.config.RustBin = ${g.android.soong.rust.config.RustPath}/bin

g.android.soong.rust.config.RustLinker = ${g.android.soong.cc.config.ClangBin}/clang++

g.android.soong.rust.config.RustLinkerArgs = -B ${g.android.soong.cc.config.ClangBin} -fuse-ld=lld

g.apex.aapt2 = out/soong/host/linux-x86/bin/aapt2

g.apex.apexer = out/soong/host/linux-x86/bin/apexer

g.apex.avbtool = out/soong/host/linux-x86/bin/avbtool

g.apex.e2fsdroid = out/soong/host/linux-x86/bin/e2fsdroid

g.apex.jsonmodify = out/soong/host/linux-x86/bin/jsonmodify

g.apex.merge_zips = out/soong/host/linux-x86/bin/merge_zips

g.apex.mke2fs = out/soong/host/linux-x86/bin/mke2fs

g.apex.resize2fs = out/soong/host/linux-x86/bin/resize2fs

g.apex.sefcontext_compile = out/soong/host/linux-x86/bin/sefcontext_compile

g.apex.soong_zip = out/soong/host/linux-x86/bin/soong_zip

g.apex.zip2zip = out/soong/host/linux-x86/bin/zip2zip

g.apex.zipalign = out/soong/host/linux-x86/bin/zipalign

g.bootstrap.BinDir = out/soong/.bootstrap/bin

g.bootstrap.buildDir = out/soong

g.bootstrap.goRoot = prebuilts/go/linux-x86

g.bootstrap.compileCmd = ${g.bootstrap.goRoot}/pkg/tool/linux_amd64/compile

g.bootstrap.goTestMainCmd = ${g.bootstrap.buildDir}/.bootstrap/bin/gotestmain

g.bootstrap.goTestRunnerCmd = ${g.bootstrap.buildDir}/.bootstrap/bin/gotestrunner

g.bootstrap.linkCmd = ${g.bootstrap.goRoot}/pkg/tool/linux_amd64/link

g.bootstrap.ninjaBuildDir = out

g.bootstrap.parallelCompile = -c 8

g.bootstrap.pluginGenSrcCmd = ${g.bootstrap.buildDir}/.bootstrap/bin/loadplugins

g.bootstrap.srcDir = .

g.cc.aidlCmd = out/soong/host/linux-x86/bin/aidl-cpp

g.cc.genSortedBssSymbolsPath = build/soong/scripts/gen_sorted_bss_symbols.sh

g.cc.lexCmd = prebuilts/build-tools/${g.android.soong.cc.config.HostPrebuiltTag}/bin/flex

g.cc.m4Cmd = prebuilts/build-tools/${g.android.soong.cc.config.HostPrebuiltTag}/bin/m4

g.cc.relPwd = PWD=/proc/self/cwd

g.cc.rsCmd = out/soong/host/linux-x86/bin/llvm-rs-cc

g.cc.sAbiDumper = prebuilts/clang-tools/${g.android.soong.cc.config.HostPrebuiltTag}/bin/header-abi-dumper

g.cc.sAbiLinker = prebuilts/clang-tools/${g.android.soong.cc.config.HostPrebuiltTag}/bin/header-abi-linker

g.cc.stripPath = build/soong/scripts/strip.sh

g.cc.symbolInjectCmd = out/soong/host/linux-x86/bin/symbol_inject

g.cc.syspropCmd = out/soong/host/linux-x86/bin/sysprop_cpp

g.cc.tocPath = build/soong/scripts/toc.sh

g.cc.toolPath = build/soong/cc/gen_stub_libs.py

g.cc.versionerCmd = prebuilts/clang-tools/${g.android.soong.cc.config.HostPrebuiltTag}/bin/versioner

g.cc.xzCmd = prebuilts/build-tools/${g.android.soong.cc.config.HostPrebuiltTag}/bin/xz

g.cc.yasmCmd = prebuilts/misc/${g.android.soong.cc.config.HostPrebuiltTag}/yasm/yasm

g.clang.clangTblgen = out/soong/host/linux-x86/bin/clang-tblgen

g.configs.assembleVintfCmd = out/soong/host/linux-x86/bin/assemble_vintf

g.configs.kconfigXmlFixupCmd = out/soong/host/linux-x86/bin/kconfig_xml_fixup

g.genrule.sboxCmd = out/soong/host/linux-x86/bin/sbox

g.genrule.soongZip = out/soong/host/linux-x86/bin/soong_zip

g.genrule.zipSync = out/soong/host/linux-x86/bin/zipsync

g.hidl.hidl = out/soong/host/linux-x86/bin/hidl-gen

g.hidl.intermediatesDir = out/soong/.intermediates

g.hidl.lint = out/soong/host/linux-x86/bin/hidl-lint

g.hidl.soong_zip = out/soong/host/linux-x86/bin/soong_zip

g.hidl.vtsc = out/soong/host/linux-x86/bin/vtsc

g.java.logtagsCmd = build/make/tools/java-event-log-tags.py

g.java.logtagsLib = build/make/tools/event_log_tags.py

g.java.mergeLogtagsCmd = build/make/tools/merge-event-log-tags.py

g.java.moduleInfoJavaPath = build/soong/scripts/jars-to-module-info-java.sh

g.libchrome.mergeZips = out/soong/host/linux-x86/bin/merge_zips

g.libchrome.mojomBindingsGenerator = out/soong/host/linux-x86/bin/mojom_bindings_generator

g.llvm.llvmTblgen = out/soong/host/linux-x86/bin/llvm-tblgen

g.python.mergeParCmd = out/soong/host/linux-x86/bin/merge_zips

g.python.parCmd = out/soong/host/linux-x86/bin/soong_zip

g.rust.rustcCmd = ${g.android.soong.rust.config.RustBin}/rustc

g.selinux.combine_maps = out/soong/host/linux-x86/bin/combine_maps

g.sysprop.soongZipCmd = out/soong/host/linux-x86/bin/soong_zip

g.sysprop.syspropJavaCmd = out/soong/host/linux-x86/bin/sysprop_java

g.tradefed.AutoGenTestConfigScript = build/make/tools/auto_gen_test_config.py

g.tradefed.EmptyTestConfig = build/make/core/empty_test_config.xml

g.tradefed.InstrumentationTestConfigTemplate = build/make/core/instrumentation_test_config_template.xml

g.tradefed.JavaHostTestConfigTemplate = build/make/core/java_host_test_config_template.xml

g.tradefed.JavaTestConfigTemplate = build/make/core/java_test_config_template.xml

g.tradefed.NativeBenchmarkTestConfigTemplate = build/make/core/native_benchmark_test_config_template.xml

g.tradefed.NativeHostTestConfigTemplate = build/make/core/native_host_test_config_template.xml

g.tradefed.NativeTestConfigTemplate = build/make/core/native_test_config_template.xml

g.tradefed.PythonBinaryHostTestConfigTemplate = build/make/core/python_binary_host_test_config_template.xml

g.vintf.assembleVintfCmd = out/soong/host/linux-x86/bin/assemble_vintf

g.xsdc.xsdcCmd = out/soong/host/linux-x86/bin/xsdc

builddir = ${g.bootstrap.ninjaBuildDir}

rule g.aidl.aidlCheckApiRule
    command = (${g.aidl.aidlCmd} --checkapi ${old} ${new} && touch ${out}) || (cat ${messageFile} && exit 1)
    description = AIDL CHECK API: ${new} against ${old}

rule g.aidl.aidlCppRule
    command = mkdir -p "${headerDir}" && ${g.aidl.aidlCmd} --lang=${lang} ${optionalFlags} --structured --ninja -d ${out}.d -h ${headerDir} -o ${outDir} ${imports} ${in}
    depfile = ${out}.d
    deps = gcc
    description = AIDL ${lang} ${in}

rule g.aidl.aidlDirPrepareRule
    command = rm -rf "${outDir}" && mkdir -p "${outDir}" && touch ${out}
    description = create ${out}

rule g.aidl.aidlDumpApiRule
    command = rm -rf "${outDir}" && mkdir -p "${outDir}" && ${g.aidl.aidlCmd} --dumpapi --structured ${imports} --out ${outDir} ${in} && (cd ${outDir} && find ./ -name "*.aidl" -exec sha1sum {} ';' && echo ${latestVersion}) | sha1sum > ${hashFile} 

rule g.aidl.aidlDumpMappingsRule
    command = rm -rf "${outDir}" && mkdir -p "${outDir}" && ${g.aidl.aidlCmd} --apimapping ${outDir}/intermediate.txt ${in} ${imports} && ${g.aidl.aidlToJniCmd} ${outDir}/intermediate.txt ${out}

rule g.aidl.aidlFreezeApiRule
    command = mkdir -p ${to} && rm -rf ${to}/* && ${g.aidl.bpmodifyCmd} -w -m ${name} -parameter versions -a ${version} ${bp} && cp -rf ${apiDir}/. ${to} && find ${to} -type f -exec bash -c "cat ${apiPreamble} {} > {}.temp; mv {}.temp {}" \; && touch ${out}

rule g.aidl.aidlJavaRule
    command = ${g.aidl.aidlCmd} --lang=java ${optionalFlags} --structured --ninja -d ${out}.d -o ${outDir} ${imports} ${in}
    depfile = ${out}.d
    deps = gcc
    description = AIDL Java ${in}

rule g.android.Cat
    command = cat ${in} > ${out}
    description = concatenate licenses ${out}

rule g.android.Cp
    command = rm -f ${out} && cp ${g.android.cpPreserveSymlinks} ${cpFlags} ${in} ${out}
    description = cp ${out}

rule g.android.CpExecutable
    command = rm -f ${out} && cp ${g.android.cpPreserveSymlinks} ${cpFlags} ${in} ${out} && chmod +x ${out}
    description = cp ${out}

rule g.android.Phony
    command = # phony ${out}
    description = phony ${out}

rule g.android.Symlink
    command = ln -f -s ${fromPath} ${out}
    description = symlink ${out}

rule g.android.Touch
    command = touch ${out}
    description = touch ${out}

rule g.android.WriteFile
    command = /bin/bash -c 'echo -e $$0 > ${out}' '${content}'
    description = writing file ${out}

rule g.android.generateNoticeRule
    command = rm -rf $$(dirname ${txtOut}) $$(dirname ${htmlOut}) $$(dirname ${out}) && mkdir -p $$(dirname ${txtOut}) $$(dirname ${htmlOut})  $$(dirname ${out}) && ${g.android.generate_notice} --text-output ${txtOut} --html-output ${htmlOut} -t "${title}" -s ${inputDir} && ${g.android.minigzip} -c ${htmlOut} > ${out}
    description = produce notice file ${out}

rule g.android.mergeNoticesRule
    command = ${g.android.merge_notices} --output ${out} ${in}
    description = merge notice files into ${out}

rule g.apex.apexBundleRule
    command = ${g.apex.zip2zip} -i ${in} -o ${out} apex_payload.img:apex/${abi}.img apex_manifest.json:root/apex_manifest.json AndroidManifest.xml:manifest/AndroidManifest.xml assets/NOTICE.html.gz:assets/NOTICE.html.gz
    description = app bundle

rule g.apex.apexManifestRule
    command = rm -f ${out} && ${g.apex.jsonmodify} ${in} -a provideNativeLibs ${provideNativeLibs} -a requireNativeLibs ${requireNativeLibs} ${opt} -o ${out}
    description = prepare ${out}

rule g.apex.apexProtoConvertRule
    command = ${g.apex.aapt2} convert --output-format proto ${in} -o ${out}

rule g.apex.apexRule
    command = rm -rf ${image_dir} && mkdir -p ${image_dir} && (. ${out}.copy_commands) && APEXER_TOOL_PATH=${tool_path} ${g.apex.apexer} --force --manifest ${manifest} --file_contexts ${file_contexts} --canned_fs_config ${canned_fs_config} --payload_type image --key ${key} ${opt_flags} ${image_dir} ${out} 
    description = APEX ${image_dir} => ${out}
    rspfile = ${out}.copy_commands
    rspfile_content = ${copy_commands}

rule g.apex.diffApexContentRule
    command = diff --unchanged-group-format='' \--changed-group-format='%<' \${image_content_file} ${whitelisted_files_file} || (echo -e "New unexpected files were added to ${apex_module_name}."  "To fix the build run following command:" && echo "system/apex/tools/update_whitelist.sh ${whitelisted_files_file} ${image_content_file}" && exit 1)
    description = Diff ${image_content_file} and ${whitelisted_files_file}

rule g.apex.emitApexContentRule
    command = rm -f ${out} && touch ${out} && (. ${out}.emit_commands)
    description = Emit APEX image content
    rspfile = ${out}.emit_commands
    rspfile_content = ${emit_commands}

rule g.apex.generateFsConfig
    command = echo '/ 1000 1000 0755' > ${out} && echo '/apex_manifest.json 1000 1000 0644' >> ${out} && echo ${ro_paths} | tr ' ' '\n' | awk '{print "/"$$1 " 1000 1000 0644"}' >> ${out} && echo ${exec_paths} | tr ' ' '\n' | awk '{print "/"$$1 " 0 2000 0755"}' >> ${out}
    description = fs_config ${out}

rule g.apex.zipApexRule
    command = rm -rf ${image_dir} && mkdir -p ${image_dir} && (. ${out}.copy_commands) && APEXER_TOOL_PATH=${tool_path} ${g.apex.apexer} --force --manifest ${manifest} --payload_type zip ${image_dir} ${out} 
    description = ZipAPEX ${image_dir} => ${out}
    rspfile = ${out}.copy_commands
    rspfile_content = ${copy_commands}

rule g.bootstrap.compile
    command = GOROOT='${g.bootstrap.goRoot}' ${g.bootstrap.compileCmd} ${g.bootstrap.parallelCompile} -o ${out}.tmp -p ${pkgPath} -complete ${incFlags} -pack ${in} && if cmp --quiet ${out}.tmp ${out}; then rm ${out}.tmp; else mv -f ${out}.tmp ${out}; fi
    description = compile ${out}
    restat = true

rule g.bootstrap.cp
    command = cp ${in} ${out}
    description = cp ${out}

rule g.bootstrap.gotestmain
    command = ${g.bootstrap.goTestMainCmd} -o ${out} -pkg ${pkg} ${in}
    description = gotestmain ${out}

rule g.bootstrap.link
    command = GOROOT='${g.bootstrap.goRoot}' ${g.bootstrap.linkCmd} -o ${out}.tmp ${libDirFlags} ${in} && if cmp --quiet ${out}.tmp ${out}; then rm ${out}.tmp; else mv -f ${out}.tmp ${out}; fi
    description = link ${out}
    restat = true

rule g.bootstrap.pluginGenSrc
    command = ${g.bootstrap.pluginGenSrcCmd} -o ${out} -p ${pkg} ${plugins}
    description = create ${out}

rule g.bootstrap.test
    command = ${g.bootstrap.goTestRunnerCmd} -p ${pkgSrcDir} -f ${out} -- ${in} -test.short
    description = test ${pkg}

rule g.bpf.ccRule
    command = ${ccCmd} --target=bpf -c ${cFlags} -MD -MF ${out}.d -o ${out} ${in}
    depfile = ${out}.d
    deps = gcc

rule g.cc.ar
    command = rm -f ${out} && ${arCmd} ${arFlags} ${out} @${out}.rsp
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.cc.cc
    command = ${g.cc.relPwd} ${g.android.soong.cc.config.CcWrapper}${ccCmd} -c ${cFlags} -MD -MF ${out}.d -o ${out} ${in}
    depfile = ${out}.d
    deps = gcc

rule g.cc.ccNoDeps
    command = ${g.cc.relPwd} ${g.android.soong.cc.config.CcWrapper}${ccCmd} -c ${cFlags} -o ${out} ${in}

rule g.cc.clangTidy
    command = rm -f ${out} && ${g.android.soong.cc.config.ClangBin}/clang-tidy ${tidyFlags} ${in} -- ${cFlags} && touch ${out}

rule g.cc.genStubSrc
    command = ${g.cc.toolPath} --arch ${arch} --api ${apiLevel} --api-map ${apiMap} ${flags} ${in} ${out}

rule g.cc.gen_sorted_bss_symbols
    command = CROSS_COMPILE=${crossCompile} ${g.cc.genSortedBssSymbolsPath} ${in} ${out}

rule g.cc.injectVersionSymbol
    command = ${g.cc.symbolInjectCmd} -i ${in} -o ${out} -s soong_build_number -from 'SOONG BUILD NUMBER PLACEHOLDER' -v ${buildNumberFromFile}

rule g.cc.ld
    command = ${ldCmd} ${crtBegin} @${out}.rsp ${libFlags} ${crtEnd} -o ${out} ${ldFlags} ${extraLibFlags}
    restat = true
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.cc.lex
    command = M4=${g.cc.m4Cmd} ${g.cc.lexCmd} -o${out} ${in}

rule g.cc.partialLd
    command = ${ldCmd} -fuse-ld=lld -nostdlib -no-pie -Wl,-r ${in} -o ${out} ${ldFlags}

rule g.cc.prefixSymbols
    command = ${objcopyCmd} --prefix-symbols=${prefix} ${in} ${out}

rule g.cc.rsCpp
    command = ${g.cc.rsCmd} -o ${outDir} -d ${outDir} -a ${out} -MD -reflect-c++ ${rsFlags} ${in} &&(echo '${out}: \' && cat ${depFiles} | awk 'start { sub(/( \\)?$$/, " \\"); print } /:/ { start=1 }') > ${out}.d &&touch ${out}
    depfile = ${out}.d
    deps = gcc

rule g.cc.sAbiDump
    command = rm -f ${out} && ${g.cc.sAbiDumper} -o ${out} ${in} ${exportDirs} -- ${cFlags} -w -isystem prebuilts/clang-tools/${g.android.soong.cc.config.HostPrebuiltTag}/clang-headers

rule g.cc.sAbiLink
    command = ${g.cc.sAbiLinker} -o ${out} ${symbolFilter} -arch ${arch}  ${exportedHeaderFlags} @${out}.rsp 
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.cc.strip
    command = CROSS_COMPILE=${crossCompile} XZ=${g.cc.xzCmd} CLANG_BIN=${g.android.soong.cc.config.ClangBin} ${g.cc.stripPath} ${args} -i ${in} -o ${out} -d ${out}.d
    depfile = ${out}.d
    deps = gcc

rule g.cc.sysprop
    command = ${g.cc.syspropCmd} --header-dir=${headerOutDir} --public-header-dir=${publicOutDir} --source-dir=${srcOutDir} --include-name=${includeName} ${in}

rule g.cc.toc
    command = CROSS_COMPILE=${crossCompile} ${g.cc.tocPath} ${format} -i ${in} -o ${out} -d ${out}.d
    depfile = ${out}.d
    deps = gcc
    restat = true

rule g.cc.versionBionicHeaders
    command = ${g.cc.versionerCmd} -o ${outDir} ${srcDir} ${depsPath} && touch ${out}

rule g.cc.windmc
    command = ${windmcCmd} -r$$(dirname ${out}) -h$$(dirname ${out}) ${in}

rule g.cc.windres
    command = ${windresCmd} ${flags} -I$$(dirname ${in}) -i ${in} -o ${out}

rule g.cc.yasm
    command = ${g.cc.yasmCmd} ${asFlags} -o ${out} ${in} && ${g.cc.yasmCmd} ${asFlags} -M ${in} >${out}.d
    depfile = ${out}.d
    deps = gcc

rule g.clang.tblgenRule
    command = ${g.clang.clangTblgen} ${includes} ${genopt} -d ${depfile} -o ${out} ${in}
    depfile = ${out}.d
    deps = gcc
    description = Clang TableGen ${in} => ${out}

rule g.configs.assemble_vintf
    command = ${g.configs.assembleVintfCmd} ${flags} -i ${in} -o ${out}
    description = assemble_vintf -i ${in}

rule g.configs.kconfig_xml_fixup
    command = ${g.configs.kconfigXmlFixupCmd} --input ${in} --output-version ${outputVersion} --output-matrix ${out}
    description = kconfig_xml_fixup ${in}

rule g.genrule.gensrcsMerge
    command = ${g.genrule.soongZip} -o ${tmpZip} @${tmpZip}.rsp && ${g.genrule.zipSync} -d ${genDir} ${tmpZip}
    rspfile = ${tmpZip}.rsp
    rspfile_content = ${zipArgs}

rule g.hidl.currentTxtRule
    command = cp -f ${in} ${output}
    description = copy current.txt: ${in} => ${output}

rule g.hidl.hidlRule
    command = rm -rf ${genDir} && ${g.hidl.hidl} -R -p . -d ${depfile} -o ${genDir} -L ${language} ${roots} ${fqName}
    depfile = ${depfile}
    deps = gcc
    description = HIDL ${language}: ${in} => ${out}

rule g.hidl.hidlSrcJarRule
    command = rm -rf ${genDir} && ${g.hidl.hidl} -R -p . -d ${depfile} -o ${genDir}/srcs -L ${language} ${roots} ${fqName} && ${g.hidl.soong_zip} -o ${genDir}/srcs.srcjar -C ${genDir}/srcs -D ${genDir}/srcs
    depfile = ${depfile}
    deps = gcc
    description = HIDL ${language}: ${in} => srcs.srcjar

rule g.hidl.inheritanceHierarchyRule
    command = rm -f ${out} && ${g.hidl.hidl} -L inheritance-hierarchy ${roots} ${fqInterface} > ${out}
    description = HIDL inheritance hierarchy: ${fqInterface} => ${out}

rule g.hidl.joinJsonObjectsToArrayRule
    command = rm -rf ${out} && echo '[' >> ${out} && for file in $$(cat ${out}.rsp); do cat $$file >> ${out}; echo ',' >> ${out}; done && sed -i '$$d' ${out} && echo ']' >> ${out}
    description = Joining JSON objects into array ${out}
    rspfile = ${out}.rsp
    rspfile_content = ${files}

rule g.hidl.lintRule
    command = rm -f ${output} && touch ${output} && ${g.hidl.lint} -j -e -R -p . ${roots} ${fqName} > ${output}
    description = hidl-lint ${fqName}: ${out}

rule g.hidl.vtsRule
    command = rm -rf ${genDir} && ${g.hidl.vtsc} -m${mode} -t${type} ${inputDir}/${packagePath} ${genDir}/${packagePath}
    description = VTS ${mode} ${type}: ${in} => ${out}

rule g.hidl.zipLintRule
    command = rm -f ${output} && ${g.hidl.soong_zip} -o ${output} -C ${g.hidl.intermediatesDir} ${files}
    description = Zipping hidl-lints into ${output}

rule g.java.aapt2Compile
    command = ${g.android.soong.java.config.Aapt2Cmd} compile -o ${outDir} ${cFlags} ${in}

rule g.java.aapt2CompileZip
    command = ${g.android.soong.java.config.ZipSyncCmd} -d ${resZipDir} ${zipSyncFlags} ${in} && ${g.android.soong.java.config.Aapt2Cmd} compile -o ${out} ${cFlags} --dir ${resZipDir}

rule g.java.aapt2Convert
    command = ${g.android.soong.java.config.Aapt2Cmd} convert --output-format proto ${in} -o ${out}

rule g.java.aapt2Link
    command = rm -rf ${genDir} && ${g.android.soong.java.config.Aapt2Cmd} link -o ${out} ${flags} --java ${genDir} --proguard ${proguardOptions} --output-text-symbols ${rTxt} ${inFlags} && ${g.android.soong.java.config.SoongZipCmd} -write_if_changed -jar -o ${genJar} -C ${genDir} -D ${genDir} &&${g.android.soong.java.config.ExtractJarPackagesCmd} -i ${genJar} -o ${extraPackages} --prefix '--extra-packages '
    restat = true

rule g.java.buildAAR
    command = rm -rf ${outDir} && mkdir -p ${outDir} && cp ${manifest} ${outDir}/AndroidManifest.xml && cp ${classesJar} ${outDir}/classes.jar && cp ${rTxt} ${outDir}/R.txt && ${g.android.soong.java.config.SoongZipCmd} -jar -o ${out} -C ${outDir} -D ${outDir}

rule g.java.buildBundleModule
    command = ${g.android.soong.java.config.MergeZipsCmd} ${out} ${in}

rule g.java.bundleMungeDexJar
    command = ${g.android.soong.java.config.Zip2ZipCmd} -i ${in} -o ${out} "classes*.dex:dex/" && ${g.android.soong.java.config.Zip2ZipCmd} -i ${in} -o ${resJar} -x "classes*.dex" "**/*:root/"

rule g.java.bundleMungePackage
    command = ${g.android.soong.java.config.Zip2ZipCmd} -i ${in} -o ${out} AndroidManifest.xml:manifest/AndroidManifest.xml resources.pb "res/**/*" "assets/**/*"

rule g.java.combineApk
    command = ${g.android.soong.java.config.MergeZipsCmd} ${out} ${in}

rule g.java.combineJar
    command = ${g.android.soong.java.config.MergeZipsCmd} --ignore-duplicates -j ${jarArgs} ${out} ${in}

rule g.java.d8
    command = rm -rf "${outDir}" && mkdir -p "${outDir}" && ${g.android.soong.java.config.D8Cmd} ${g.android.soong.java.config.DexFlags} --output ${outDir} ${d8Flags} ${in} && ${g.android.soong.java.config.SoongZipCmd} ${zipFlags} -o ${outDir}/classes.dex.jar -C ${outDir} -f "${outDir}/classes*.dex" && ${g.android.soong.java.config.MergeZipsCmd} -D -stripFile "**/*.class" ${out} ${outDir}/classes.dex.jar ${in}

rule g.java.fileListToFile
    command = cp ${out}.rsp ${out}
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.java.hiddenAPIEncodeDex
    command = rm -rf ${tmpDir} && mkdir -p ${tmpDir} && mkdir ${tmpDir}/dex-input && mkdir ${tmpDir}/dex-output && unzip -o -q ${in} 'classes*.dex' -d ${tmpDir}/dex-input && for INPUT_DEX in $$(find ${tmpDir}/dex-input -maxdepth 1 -name 'classes*.dex' | sort); do   echo "--input-dex=$${INPUT_DEX}";   echo "--output-dex=${tmpDir}/dex-output/$$(basename $${INPUT_DEX})"; done | xargs ${g.android.soong.java.config.HiddenAPI} encode --api-flags=${flagsCsv} ${hiddenapiFlags} && ${g.android.soong.java.config.SoongZipCmd} ${soongZipFlags} -o ${tmpDir}/dex.jar -C ${tmpDir}/dex-output -f "${tmpDir}/dex-output/classes*.dex" && ${g.android.soong.java.config.MergeZipsCmd} -D -zipToNotStrip ${tmpDir}/dex.jar -stripFile "classes*.dex" ${out} ${tmpDir}/dex.jar ${in}

rule g.java.hiddenAPIGenerateCSV
    command = ${g.android.soong.java.config.Class2Greylist} --stub-api-flags ${stubAPIFlags} ${in} ${outFlag} ${out}

rule g.java.jar
    command = ${g.android.soong.java.config.SoongZipCmd} -jar -o ${out} @${out}.rsp
    rspfile = ${out}.rsp
    rspfile_content = ${jarArgs}

rule g.java.jarjar
    command = ${g.android.soong.java.config.JavaCmd} ${g.android.soong.java.config.JavaVmFlags} -jar ${g.android.soong.java.config.JarjarCmd} process ${rulesFile} ${in} ${out}

rule g.java.jarsTosystemModules
    command = rm -rf ${outDir} ${workDir} && mkdir -p ${workDir}/jmod && ${g.java.moduleInfoJavaPath} java.base ${in} > ${workDir}/module-info.java && ${g.android.soong.java.config.JavacCmd} --system=none --patch-module=java.base=${classpath} ${workDir}/module-info.java && ${g.android.soong.java.config.SoongZipCmd} -jar -o ${workDir}/classes.jar -C ${workDir} -f ${workDir}/module-info.class && ${g.android.soong.java.config.MergeZipsCmd} -j ${workDir}/module.jar ${workDir}/classes.jar ${in} && ${g.android.soong.java.config.JmodCmd} create --module-version ${g.android.soong.java.config.JlinkVersion} --target-platform android   --class-path ${workDir}/module.jar ${workDir}/jmod/java.base.jmod && ${g.android.soong.java.config.JlinkCmd} --module-path ${workDir}/jmod --add-modules java.base --output ${outDir}   --disable-plugin system-modules && cp ${g.android.soong.java.config.JrtFsJar} ${outDir}/lib/

rule g.java.javac
    command = rm -rf "${outDir}" "${annoDir}" "${srcJarDir}" && mkdir -p "${outDir}" "${annoDir}" "${srcJarDir}" && ${g.android.soong.java.config.ZipSyncCmd} -d ${srcJarDir} -l ${srcJarDir}/list -f "*.java" ${srcJars} && (if [ -s ${srcJarDir}/list ] || [ -s ${out}.rsp ] ; then ${g.android.soong.java.config.SoongJavacWrapper} ${g.android.soong.java.config.JavacWrapper}${g.android.soong.java.config.JavacCmd} ${g.android.soong.java.config.JavacHeapFlags} ${g.android.soong.java.config.JavacVmFlags} ${g.android.soong.java.config.CommonJdkFlags} ${processorpath} ${processor} ${javacFlags} ${bootClasspath} ${classpath} -source ${javaVersion} -target ${javaVersion} -d ${outDir} -s ${annoDir} @${out}.rsp @${srcJarDir}/list ; fi ) && ${g.android.soong.java.config.SoongZipCmd} -jar -o ${out} -C ${outDir} -D ${outDir} && rm -rf "${srcJarDir}"
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.java.kapt
    command = rm -rf "${srcJarDir}" "${kotlinBuildFile}" "${kaptDir}" && mkdir -p "${srcJarDir}" "${kaptDir}" && ${g.android.soong.java.config.ZipSyncCmd} -d ${srcJarDir} -l ${srcJarDir}/list -f "*.java" ${srcJars} && ${g.android.soong.java.config.GenKotlinBuildFileCmd} ${classpath} "${name}" "" ${out}.rsp ${srcJarDir}/list > ${kotlinBuildFile} &&${g.android.soong.java.config.KotlincCmd} ${g.android.soong.java.config.KotlincSuppressJDK9Warnings} ${g.android.soong.java.config.JavacHeapFlags} ${kotlincFlags} -Xplugin=${g.android.soong.java.config.KotlinKaptJar} -P plugin:org.jetbrains.kotlin.kapt3:sources=${kaptDir}/sources -P plugin:org.jetbrains.kotlin.kapt3:classes=${kaptDir}/classes -P plugin:org.jetbrains.kotlin.kapt3:stubs=${kaptDir}/stubs -P plugin:org.jetbrains.kotlin.kapt3:correctErrorTypes=true -P plugin:org.jetbrains.kotlin.kapt3:aptMode=stubsAndApt -P plugin:org.jetbrains.kotlin.kapt3:javacArguments=${encodedJavacFlags} ${kaptProcessorPath} ${kaptProcessor} -Xbuild-file=${kotlinBuildFile} && ${g.android.soong.java.config.SoongZipCmd} -jar -o ${out} -C ${kaptDir}/sources -D ${kaptDir}/sources && rm -rf "${srcJarDir}"
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.java.kotlinc
    command = rm -rf "${classesDir}" "${srcJarDir}" "${kotlinBuildFile}" "${emptyDir}" && mkdir -p "${classesDir}" "${srcJarDir}" "${emptyDir}" && ${g.android.soong.java.config.ZipSyncCmd} -d ${srcJarDir} -l ${srcJarDir}/list -f "*.java" ${srcJars} && ${g.android.soong.java.config.GenKotlinBuildFileCmd} ${classpath} "${name}" ${classesDir} ${out}.rsp ${srcJarDir}/list > ${kotlinBuildFile} &&${g.android.soong.java.config.KotlincCmd} ${g.android.soong.java.config.JavacHeapFlags} ${kotlincFlags} -jvm-target ${kotlinJvmTarget} -Xbuild-file=${kotlinBuildFile} -kotlin-home ${emptyDir} && ${g.android.soong.java.config.SoongZipCmd} -jar -o ${out} -C ${classesDir} -D ${classesDir} && rm -rf "${srcJarDir}"
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.java.logtags
    command = ${g.java.logtagsCmd} -o ${out} ${in}

rule g.java.manifestFixer
    command = ${g.android.soong.java.config.ManifestFixerCmd} --minSdkVersion ${minSdkVersion} --targetSdkVersion ${targetSdkVersion} --raise-min-sdk-version ${args} ${in} ${out}

rule g.java.manifestMerger
    command = ${g.android.soong.java.config.ManifestMergerCmd} ${args} --main ${in} ${libs} --out ${out}

rule g.java.mergeLogtags
    command = ${g.java.mergeLogtagsCmd} -o ${out} ${in}

rule g.java.packageCheck
    command = rm -f ${out} && ${g.android.soong.java.config.PackageCheckCmd} ${in} ${packages} && touch ${out}

rule g.java.r8
    command = rm -rf "${outDir}" && mkdir -p "${outDir}" && rm -f "${outDict}" && ${g.android.soong.java.config.R8Cmd} ${g.android.soong.java.config.DexFlags} -injars ${in} --output ${outDir} --force-proguard-compatibility --no-data-resources -printmapping ${outDict} ${r8Flags} && touch "${outDict}" && ${g.android.soong.java.config.SoongZipCmd} ${zipFlags} -o ${outDir}/classes.dex.jar -C ${outDir} -f "${outDir}/classes*.dex" && ${g.android.soong.java.config.MergeZipsCmd} -D -stripFile "**/*.class" ${out} ${outDir}/classes.dex.jar ${in}

rule g.java.signapk
    command = ${g.android.soong.java.config.JavaCmd} ${g.android.soong.java.config.JavaVmFlags} -Djava.library.path=$$(dirname ${g.android.soong.java.config.SignapkJniLibrary}) -jar ${g.android.soong.java.config.SignapkCmd} ${flags} ${certificates} ${in} ${out}

rule g.java.turbine
    command = rm -rf "${outDir}" && mkdir -p "${outDir}" && ${g.android.soong.java.config.JavaCmd} ${g.android.soong.java.config.JavaVmFlags} -jar ${g.android.soong.java.config.TurbineJar} --output ${out}.tmp --temp_dir "${outDir}" --sources @${out}.rsp  --source_jars ${srcJars} --javacopts ${g.android.soong.java.config.CommonJdkFlags} ${javacFlags} -source ${javaVersion} -target ${javaVersion} -- ${bootClasspath} ${classpath} && ${g.android.soong.java.config.Ziptime} ${out}.tmp && (if cmp -s ${out}.tmp ${out} ; then rm ${out}.tmp ; else mv ${out}.tmp ${out} ; fi )
    restat = true
    rspfile = ${out}.rsp
    rspfile_content = ${in}

rule g.java.unzipAAR
    command = rm -rf ${outDir} && mkdir -p ${outDir} && unzip -qo -d ${outDir} ${in} && rm -rf ${outDir}/res && touch ${out}

rule g.java.zip
    command = ${g.android.soong.java.config.SoongZipCmd} -o ${out} @${out}.rsp
    rspfile = ${out}.rsp
    rspfile_content = ${jarArgs}

rule g.java.zipalign
    command = if ! ${g.android.soong.java.config.ZipAlign} -c -p 4 ${in} > /dev/null; then ${g.android.soong.java.config.ZipAlign} -f -p 4 ${in} ${out}; else cp -f ${in} ${out}; fi

rule g.libchrome.generateMojomPicklesRule
    command = ${g.libchrome.mojomBindingsGenerator}$
		--use_bundled_pylibs parse$
		-d ${package}$
		${flags}$
		-o ${outDir}$
		${in}
    description = Mojo pickles generation ${in} => ${out}
    restat = true

rule g.libchrome.generateMojomSrcsRule
    command = ${g.libchrome.mojomBindingsGenerator}$
		--use_bundled_pylibs generate$
		-o ${outDir}$
		-I=${package}:${package}$
		-d ${package}$
		${flags}$
		--bytecode_path=${templateDir}$
		--generators=${mojomGenerator}$
		--use_new_wrapper_types$
		${in}
    description = Mojo sources generation ${in} => ${out}
    restat = true

rule g.libchrome.mergeSrcjarsRule
    command = ${g.libchrome.mergeZips} ${out} ${in}
    description = Merge .srcjars ${in} => ${out}

rule g.llvm.tblgenRule
    command = ${g.llvm.llvmTblgen} ${includes} ${genopt} -d ${depfile} -o ${out} ${in}
    depfile = ${out}.d
    deps = gcc
    description = LLVM TableGen ${in} => ${out}

rule g.python.combineZip
    command = ${g.python.mergeParCmd} ${out} ${in}

rule g.python.embeddedPar
    command = rm -f ${out}.main && sed 's/ENTRY_POINT/${main}/' build/soong/python/scripts/main.py >${out}.main &&${g.python.mergeParCmd} -p -pm ${out}.main --prefix ${launcher} ${out} ${srcsZips} && chmod +x ${out} && rm -rf ${out}.main

rule g.python.embeddedParNoMain
    command = ${g.python.mergeParCmd} -p --prefix ${launcher} ${out} ${srcsZips} && chmod +x ${out}

rule g.python.hostPar
    command = sed -e 's/%interpreter%/${interp}/g' -e 's/%main%/${main}/g' ${template} > ${stub} && echo "#!/usr/bin/env python" >${out}.prefix &&${g.python.mergeParCmd} -p --prefix ${out}.prefix -pm ${stub} ${out} ${srcsZips} && chmod +x ${out} && (rm -f ${stub}; rm -f ${out}.prefix)

rule g.python.zip
    command = ${g.python.parCmd} -o ${out} ${args}

rule g.rust.rustc
    command = ${g.rust.rustcCmd} -C linker=${g.android.soong.rust.config.RustLinker} -C link-args="${crtBegin} ${g.android.soong.rust.config.RustLinkerArgs} ${linkFlags} ${crtEnd}" --emit link -o ${out} --emit dep-info=${out}.d ${in} ${libFlags} ${rustcFlags}
    depfile = ${out}.d
    deps = gcc

rule g.selinux.combineMapsRule
    command = ${g.selinux.combine_maps} -t ${topHalf} -b ${bottomHalf} -o ${out}

rule g.suite_harness.tradefedBinaryGenRule
    command = rm -f ${out} && touch ${out} && echo "# This file is auto generated by Android.mk. Do not modify." >> ${out} && echo "build_number = ${buildNumber}" >> ${out} && echo "target_arch = ${arch}" >> ${out} && echo "name = ${name}" >> ${out} && echo "fullname = ${fullname}" >> ${out} && echo "version = ${version}" >> ${out}

rule g.sysprop.syspropJava
    command = rm -rf ${out}.tmp && mkdir -p ${out}.tmp && ${g.sysprop.syspropJavaCmd} --scope ${scope} --java-output-dir ${out}.tmp ${in} && ${g.sysprop.soongZipCmd} -jar -o ${out} -C ${out}.tmp -D ${out}.tmp && rm -rf ${out}.tmp

rule g.tradefed.autogenInstrumentationTest
    command = ${g.tradefed.AutoGenTestConfigScript} ${out} ${in} ${g.tradefed.EmptyTestConfig} ${template}

rule g.tradefed.autogenTestConfig
    command = sed 's&{MODULE}&${name}&g;s&{EXTRA_CONFIGS}&'${extraConfigs}'&g' ${template} > ${out}

rule g.vintf.assemble_vintf
    command = ${g.vintf.assembleVintfCmd} -i ${inputs} -o ${out}
    description = assemble_vintf -i ${inputs}

rule g.xsdc.xsdcCppRule
    command = rm -rf "${outDir}" && ${g.xsdc.xsdcCmd} ${in} -p ${pkgName} -o ${outDir} -c
    description = xsdc C++ ${in} => ${out}

rule g.xsdc.xsdcJavaRule
    command = rm -rf "${out}.temp" && mkdir -p "${out}.temp" && ${g.xsdc.xsdcCmd} ${in} -p ${pkgName} -o ${out}.temp -j && ${g.android.soong.java.config.SoongZipCmd} -jar -o ${out} -C ${out}.temp -D ${out}.temp && rm -rf ${out}.temp
    description = xsdc Java ${in} => ${out}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  adbd
# Variant: android_arm64_armv8-a_core
# Type:    cc_binary
# Factory: android/soong/android.ModuleFactoryAdaptor.func1
# Defined: system/core/adb/Android.bp:494:1

m.adbd_android_arm64_armv8-a_core.moduleDesc = //system/core/adb:adbd 
m.adbd_android_arm64_armv8-a_core.moduleDescSuffix = 
m.adbd_android_arm64_armv8-a_core.cflags = -Wall -Wextra -Werror -Wexit-time-destructors -Wno-unused-parameter -Wno-missing-field-initializers -Wthread-safety -Wvla -DADB_HOST=1 -DALLOW_ADBD_ROOT=0 -DANDROID_BASE_UNIQUE_FD_DISABLE_IMPLICIT_CONVERSION=1 -UADB_HOST -DADB_HOST=0 -D_GNU_SOURCE -Wno-deprecated-declarations -UALLOW_ADBD_ROOT -DALLOW_ADBD_ROOT=1 -DALLOW_ADBD_DISABLE_VERITY -DALLOW_ADBD_NO_AUTH -target aarch64-linux-android10000 -B${g.android.soong.cc.config.Arm64GccRoot}/aarch64-linux-android/bin -DANDROID_STRICT -fPIE
m.adbd_android_arm64_armv8-a_core.cppflags = -std=gnu++2a ${g.android.soong.cc.config.CommonClangGlobalCppflags} ${g.android.soong.cc.config.DeviceGlobalCppflags} -fno-rtti ${g.android.soong.cc.config.Arm64ClangCppflags}

build $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/obj/system/core/adb/daemon/main.o $
        : g.cc.cc system/core/adb/daemon/main.cpp | ${ccCmd}
    description = ${m.adbd_android_arm64_armv8-a_core.moduleDesc}clang++ daemon/main.cpp${m.adbd_android_arm64_armv8-a_core.moduleDescSuffix}
    cFlags = -Isystem/core/adb  ${g.android.soong.cc.config.Arm64ClangCflags} ${g.android.soong.cc.config.CommonClangGlobalCflags} ${g.android.soong.cc.config.DeviceClangGlobalCflags} ${g.android.soong.cc.config.Arm64ClangArmv8ACflags}  -D__LIBC_API__=10000 -D__LIBM_API__=10000 -D__LIBDL_API__=10000 -Ibuild/soong/cc/libbuildversion/include -Iexternal/libcxxabi/include -Isystem/core/adb/daemon/include -Isystem/core/qemu_pipe/include -Isystem/core/base/include -Iexternal/fmtlib/include -Iexternal/libcap/libcap/include -Iexternal/boringssl/src/include -Isystem/core/libcutils/include -Isystem/core/libprocessgroup/include -Isystem/core/liblog/include -Iexternal/minijail -Iexternal/selinux/libselinux/include -Iexternal/libcxx/include -Ibionic/libc/include ${g.android.soong.cc.config.CommonGlobalIncludes} ${g.android.soong.cc.config.Arm64IncludeFlags} ${g.android.soong.cc.config.CommonNativehelperInclude} ${m.adbd_android_arm64_armv8-a_core.cflags} ${m.adbd_android_arm64_armv8-a_core.cppflags} ${g.android.soong.cc.config.NoOverrideClangGlobalCflags}
    ccCmd = ${g.android.soong.cc.config.ClangBin}/clang++

build $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/adbd $
        : g.cc.strip $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/unstripped/adbd $
        | ${g.cc.stripPath} ${g.cc.xzCmd}
    description = ${m.adbd_android_arm64_armv8-a_core.moduleDesc}strip adbd${m.adbd_android_arm64_armv8-a_core.moduleDescSuffix}
    args = $ --add-gnu-debuglink --keep-symbols
    crossCompile = ${g.android.soong.cc.config.Arm64GccRoot}/bin/aarch64-linux-android-

build $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/versioned-stripped/adbd $
        : g.cc.strip $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/versioned/adbd $
        | ${g.cc.stripPath} ${g.cc.xzCmd}
    description = ${m.adbd_android_arm64_armv8-a_core.moduleDesc}strip adbd${m.adbd_android_arm64_armv8-a_core.moduleDescSuffix}
    args = $ --add-gnu-debuglink --keep-symbols
    crossCompile = ${g.android.soong.cc.config.Arm64GccRoot}/bin/aarch64-linux-android-

build $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/versioned/adbd $
        : g.cc.injectVersionSymbol $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/unstripped/adbd $
        | ${g.cc.symbolInjectCmd}
    description = ${m.adbd_android_arm64_armv8-a_core.moduleDesc}inject version symbol${m.adbd_android_arm64_armv8-a_core.moduleDescSuffix}
    buildNumberFromFile = $$(cat out/build_number.txt)

build $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/unstripped/adbd $
        : g.cc.ld $
        out/soong/.intermediates/system/core/adb/adbd/android_arm64_armv8-a_core/obj/system/core/adb/daemon/main.o $
        | ${ldCmd} $
        out/soong/.intermediates/system/core/adb/libadbd/android_arm64_armv8-a_core_shared/libadbd.so.toc $
        out/soong/.intermediates/system/core/adb/libadbd_services/android_arm64_armv8-a_core_shared/libadbd_services.so.toc $
        out/soong/.intermediates/system/core/base/libbase/android_arm64_armv8-a_core_shared/libbase.so.toc $
        out/soong/.intermediates/external/libcap/libcap/android_arm64_armv8-a_core_shared/libcap.so.toc $
        out/soong/.intermediates/external/boringssl/libcrypto/android_arm64_armv8-a_core_shared/libcrypto.so.toc $
        out/soong/.intermediates/system/core/libcutils/libcutils/android_arm64_armv8-a_core_shared/libcutils.so.toc $
        out/soong/.intermediates/system/core/liblog/liblog/android_arm64_armv8-a_core_shared/liblog.so.toc $
        out/soong/.intermediates/external/minijail/libminijail/android_arm64_armv8-a_core_shared/libminijail.so.toc $
        out/soong/.intermediates/external/selinux/libselinux/libselinux/android_arm64_armv8-a_core_shared/libselinux.so.toc $
        out/soong/.intermediates/external/libcxx/libc++/android_arm64_armv8-a_core_shared/libc++.so.toc $
        out/soong/.intermediates/bionic/libc/libc/android_arm64_armv8-a_core_shared_10000/libc.so.toc $
        out/soong/.intermediates/bionic/libm/libm/android_arm64_armv8-a_core_shared_10000/libm.so.toc $
        out/soong/.intermediates/bionic/libdl/libdl/android_arm64_armv8-a_core_shared_10000/libdl.so.toc $
        out/soong/.intermediates/external/libcxxabi/libc++demangle/android_arm64_armv8-a_core_static/libc++demangle.a $
        prebuilts/clang/host/linux-x86/clang-r365631b/lib64/clang/9.0.7/lib/linux/libclang_rt.builtins-aarch64-android.a $
        prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/lib64/libatomic.a $
        out/soong/.intermediates/build/soong/libgcc_stripped/android_arm64_armv8-a_core_static/libgcc_stripped.a $
        out/soong/.intermediates/build/soong/cc/libbuildversion/libbuildversion/android_arm64_armv8-a_core_static/libbuildversion.a $
        out/soong/.intermediates/bionic/libc/crtbegin_dynamic/android_arm64_armv8-a_core/crtbegin_dynamic.o $
        out/soong/.intermediates/bionic/libc/crtend_android/android_arm64_armv8-a_core/obj/bionic/libc/arch-common/bionic/crtend.o
    description = ${m.adbd_android_arm64_armv8-a_core.moduleDesc}link adbd${m.adbd_android_arm64_armv8-a_core.moduleDescSuffix}
    crtBegin = out/soong/.intermediates/bionic/libc/crtbegin_dynamic/android_arm64_armv8-a_core/crtbegin_dynamic.o
    crtEnd = out/soong/.intermediates/bionic/libc/crtend_android/android_arm64_armv8-a_core/obj/bionic/libc/arch-common/bionic/crtend.o
    extraLibFlags = 
    ldCmd = ${g.android.soong.cc.config.ClangBin}/clang++
    ldFlags = -target aarch64-linux-android10000 -B${g.android.soong.cc.config.Arm64GccRoot}/aarch64-linux-android/bin ${g.android.soong.cc.config.DeviceGlobalLldflags} -Wl,--pack-dyn-relocs=android+relr -Wl,--use-android-relr-tags -Wl,--no-undefined ${g.android.soong.cc.config.Arm64Lldflags}  -Wl,--exclude-libs=libclang_rt.builtins-aarch64-android.a  -pie -nostdlib -Bdynamic -Wl,--gc-sections -Wl,-z,nocopyreloc -Wl,-execute-only -Wl,-dynamic-linker,/system/bin/linker64
    libFlags = -Wl,--whole-archive  out/soong/.intermediates/build/soong/cc/libbuildversion/libbuildversion/android_arm64_armv8-a_core_static/libbuildversion.a -Wl,--no-whole-archive  out/soong/.intermediates/external/libcxxabi/libc++demangle/android_arm64_armv8-a_core_static/libc++demangle.a -Wl,--start-group prebuilts/clang/host/linux-x86/clang-r365631b/lib64/clang/9.0.7/lib/linux/libclang_rt.builtins-aarch64-android.a prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/lib64/libatomic.a out/soong/.intermediates/build/soong/libgcc_stripped/android_arm64_armv8-a_core_static/libgcc_stripped.a -Wl,--end-group out/soong/.intermediates/system/core/adb/libadbd/android_arm64_armv8-a_core_shared/libadbd.so out/soong/.intermediates/system/core/adb/libadbd_services/android_arm64_armv8-a_core_shared/libadbd_services.so out/soong/.intermediates/system/core/base/libbase/android_arm64_armv8-a_core_shared/libbase.so out/soong/.intermediates/external/libcap/libcap/android_arm64_armv8-a_core_shared/libcap.so out/soong/.intermediates/external/boringssl/libcrypto/android_arm64_armv8-a_core_shared/libcrypto.so out/soong/.intermediates/system/core/libcutils/libcutils/android_arm64_armv8-a_core_shared/libcutils.so out/soong/.intermediates/system/core/liblog/liblog/android_arm64_armv8-a_core_shared/liblog.so out/soong/.intermediates/external/minijail/libminijail/android_arm64_armv8-a_core_shared/libminijail.so out/soong/.intermediates/external/selinux/libselinux/libselinux/android_arm64_armv8-a_core_shared/libselinux.so out/soong/.intermediates/external/libcxx/libc++/android_arm64_armv8-a_core_shared/libc++.so out/soong/.intermediates/bionic/libc/libc/android_arm64_armv8-a_core_shared_10000/libc.so out/soong/.intermediates/bionic/libm/libm/android_arm64_armv8-a_core_shared_10000/libm.so out/soong/.intermediates/bionic/libdl/libdl/android_arm64_armv8-a_core_shared_10000/libdl.so

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Module:  ext
# Variant: android_common
# Type:    java_library
# Factory: android/soong/android.ModuleFactoryAdaptor.func1
# Defined: frameworks/base/Android.bp:511:1

m.ext_android_common.moduleDesc = //frameworks/base:ext 
m.ext_android_common.moduleDescSuffix = $ [common]

rule m.ext_android_common.dexpreopt_strip
    command = cp -f out/soong/.intermediates/frameworks/base/ext/android_common/dex-withres-aligned/ext.jar out/soong/.intermediates/frameworks/base/ext/android_common/dexpreopt/ext.jar

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/turbine-combined/ext.jar $
        : g.java.combineJar $
        out/soong/.intermediates/external/libphonenumber/libphonenumber-platform/android_common/turbine-combined/libphonenumber-platform.jar $
        out/soong/.intermediates/external/nist-sip/nist-sip/android_common/turbine-combined/nist-sip.jar $
        out/soong/.intermediates/external/tagsoup/tagsoup/android_common/turbine-combined/tagsoup.jar $
        out/soong/.intermediates/external/rappor/rappor/android_common/turbine-combined/rappor.jar $
        out/soong/.intermediates/external/libtextclassifier/libtextclassifier-java/android_common/turbine-combined/libtextclassifier-java.jar $
        | ${g.android.soong.java.config.MergeZipsCmd}
    description = ${m.ext_android_common.moduleDesc}for turbine${m.ext_android_common.moduleDescSuffix}
    jarArgs = -stripDir  META-INF/TRANSITIVE -stripFile module-info.class

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/combined/ext.jar $
        : g.java.combineJar $
        out/soong/.intermediates/external/libphonenumber/libphonenumber-platform/android_common/javac/libphonenumber-platform.jar $
        out/soong/.intermediates/external/nist-sip/nist-sip/android_common/javac/nist-sip.jar $
        out/soong/.intermediates/external/tagsoup/tagsoup/android_common/javac/tagsoup.jar $
        out/soong/.intermediates/external/rappor/rappor/android_common/javac/rappor.jar $
        out/soong/.intermediates/external/libtextclassifier/libtextclassifier-java/android_common/javac/libtextclassifier-java.jar $
        | ${g.android.soong.java.config.MergeZipsCmd}
    description = ${m.ext_android_common.moduleDesc}for javac${m.ext_android_common.moduleDescSuffix}
    jarArgs = -stripFile module-info.class

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/withres/ext.jar $
        : g.java.combineJar $
        out/soong/.intermediates/external/libphonenumber/libphonenumber-platform/android_common/res/libphonenumber-platform.jar $
        out/soong/.intermediates/frameworks/base/ext/android_common/combined/ext.jar $
        | ${g.android.soong.java.config.MergeZipsCmd}
    description = ${m.ext_android_common.moduleDesc}for resources${m.ext_android_common.moduleDescSuffix}
    jarArgs = -stripFile module-info.class

build out/soong/.intermediates/frameworks/base/ext/android_common/dex/ext.jar: $
        g.java.d8 $
        out/soong/.intermediates/frameworks/base/ext/android_common/combined/ext.jar $
        | ${g.android.soong.java.config.D8Cmd} $
        ${g.android.soong.java.config.SoongZipCmd} $
        ${g.android.soong.java.config.MergeZipsCmd} $
        out/soong/.intermediates/libcore/mmodules/core_platform_api/core.platform.api.stubs/android_common/turbine-combined/core.platform.api.stubs.jar $
        out/soong/.intermediates/libcore/core-lambda-stubs/android_common/turbine-combined/core-lambda-stubs.jar $
        out/soong/.intermediates/external/libphonenumber/libphonenumber-platform/android_common/turbine-combined/libphonenumber-platform.jar $
        out/soong/.intermediates/external/nist-sip/nist-sip/android_common/turbine-combined/nist-sip.jar $
        out/soong/.intermediates/external/tagsoup/tagsoup/android_common/turbine-combined/tagsoup.jar $
        out/soong/.intermediates/external/rappor/rappor/android_common/turbine-combined/rappor.jar $
        out/soong/.intermediates/external/libtextclassifier/libtextclassifier-java/android_common/turbine-combined/libtextclassifier-java.jar
    description = ${m.ext_android_common.moduleDesc}d8${m.ext_android_common.moduleDescSuffix}
    d8Flags = --min-api 10000 --lib out/soong/.intermediates/libcore/mmodules/core_platform_api/core.platform.api.stubs/android_common/turbine-combined/core.platform.api.stubs.jar --lib out/soong/.intermediates/libcore/core-lambda-stubs/android_common/turbine-combined/core-lambda-stubs.jar --lib out/soong/.intermediates/external/libphonenumber/libphonenumber-platform/android_common/turbine-combined/libphonenumber-platform.jar --lib out/soong/.intermediates/external/nist-sip/nist-sip/android_common/turbine-combined/nist-sip.jar --lib out/soong/.intermediates/external/tagsoup/tagsoup/android_common/turbine-combined/tagsoup.jar --lib out/soong/.intermediates/external/rappor/rappor/android_common/turbine-combined/rappor.jar --lib out/soong/.intermediates/external/libtextclassifier/libtextclassifier-java/android_common/turbine-combined/libtextclassifier-java.jar
    outDir = out/soong/.intermediates/frameworks/base/ext/android_common/dex
    zipFlags = --ignore_missing_files -L 0

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/aligned/ext.jar $
        : g.java.zipalign $
        out/soong/.intermediates/frameworks/base/ext/android_common/dex/ext.jar $
        | ${g.android.soong.java.config.ZipAlign}
    description = ${m.ext_android_common.moduleDesc}align${m.ext_android_common.moduleDescSuffix}

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/flags.csv $
        : g.java.hiddenAPIGenerateCSV $
        out/soong/.intermediates/frameworks/base/ext/android_common/combined/ext.jar $
        | ${g.android.soong.java.config.Class2Greylist} $
        out/soong/hiddenapi/hiddenapi-stub-flags.txt
    description = ${m.ext_android_common.moduleDesc}hiddenapi flags${m.ext_android_common.moduleDescSuffix}
    outFlag = --write-flags-csv
    stubAPIFlags = out/soong/hiddenapi/hiddenapi-stub-flags.txt

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/metadata.csv $
        : g.java.hiddenAPIGenerateCSV $
        out/soong/.intermediates/frameworks/base/ext/android_common/combined/ext.jar $
        | ${g.android.soong.java.config.Class2Greylist} $
        out/soong/hiddenapi/hiddenapi-stub-flags.txt
    description = ${m.ext_android_common.moduleDesc}hiddenapi metadata${m.ext_android_common.moduleDescSuffix}
    outFlag = --write-metadata-csv
    stubAPIFlags = out/soong/hiddenapi/hiddenapi-stub-flags.txt

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/unaligned/unaligned.jar $
        : g.java.hiddenAPIEncodeDex $
        out/soong/.intermediates/frameworks/base/ext/android_common/aligned/ext.jar $
        | ${g.android.soong.java.config.HiddenAPI} $
        ${g.android.soong.java.config.SoongZipCmd} $
        ${g.android.soong.java.config.MergeZipsCmd} $
        out/soong/hiddenapi/hiddenapi-flags.csv
    description = ${m.ext_android_common.moduleDesc}hiddenapi encode dex${m.ext_android_common.moduleDescSuffix}
    flagsCsv = out/soong/hiddenapi/hiddenapi-flags.csv
    hiddenapiFlags = 
    soongZipFlags = -L 0
    tmpDir = out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/unaligned

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/ext.jar $
        : g.java.zipalign $
        out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/unaligned/unaligned.jar $
        | ${g.android.soong.java.config.ZipAlign}
    description = ${m.ext_android_common.moduleDesc}align${m.ext_android_common.moduleDescSuffix}

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/dex-withres/ext.jar $
        : g.java.combineJar $
        out/soong/.intermediates/frameworks/base/ext/android_common/hiddenapi/ext.jar $
        out/soong/.intermediates/external/libphonenumber/libphonenumber-platform/android_common/res/libphonenumber-platform.jar $
        | ${g.android.soong.java.config.MergeZipsCmd}
    description = ${m.ext_android_common.moduleDesc}for dex resources${m.ext_android_common.moduleDescSuffix}
    jarArgs = -stripFile module-info.class

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/dex-withres-aligned/ext.jar $
        : g.java.zipalign $
        out/soong/.intermediates/frameworks/base/ext/android_common/dex-withres/ext.jar $
        | ${g.android.soong.java.config.ZipAlign}
    description = ${m.ext_android_common.moduleDesc}align${m.ext_android_common.moduleDescSuffix}

build $
        out/soong/.intermediates/frameworks/base/ext/android_common/dexpreopt/ext.jar $
        : m.ext_android_common.dexpreopt_strip | $
        out/soong/.intermediates/frameworks/base/ext/android_common/dex-withres-aligned/ext.jar
    description = ${m.ext_android_common.moduleDesc}dexpreopt strip${m.ext_android_common.moduleDescSuffix}
